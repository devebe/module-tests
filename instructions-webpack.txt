Get everything ready and working with npm and webpack

run the following for starting up with npm:     npm init -y
run the following for starting up webpack:      npm install webpack webpack-cli --save-dev

Install HTML plugin for webpack:                npm install --save-dev html-webpack-plugin
Install webpack-merge for webpack:              npm install --save-dev webpack-merge
Install webpack-dev-server for webpack:         npm install --save-dev webpack-dev-server

Create folder structure
___________________________________________________

dist for bundling assets, nothing needs to be there
src for building your assets, such as js, html etc.

Create webpack.common.js
___________________________________________________

const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  entry: {
    app: './src/index.js',
  },
  module: {
    rules: [
        {
            test: /\.css$/i,
            use: ['style-loader', 'css-loader'],
        },
        {
            test: /\.(png|svg|jpg|jpeg|gif)$/i,
            type: 'asset/resource',
        },
        {
            test: /\.(woff|woff2|eot|ttf|otf)$/i,
            type: 'asset/resource',
        },
    ],
  },
  plugins: [
    new HtmlWebpackPlugin({
      title: 'Production',
    }),
  ],
  output: {
    filename: '[name].bundle.js',
    path: path.resolve(__dirname, 'dist'),
    clean: true,
  },
};

Create webpack.dev.js
___________________________________________________

const { merge } = require('webpack-merge');
const common = require('./webpack.common.js');

module.exports = merge(common, {
  mode: 'development',
  devtool: 'inline-source-map',
  devServer: {
    static: './dist',
  },
});

Create webpack.prod.js
___________________________________________________

const { merge } = require('webpack-merge');
const common = require('./webpack.common.js');

module.exports = merge(common, {
  mode: 'production',
  devtool: 'source-map',
});

Inclusions to package.json:
___________________________________________________
include in scripts:
"watch": "webpack --watch"
"start": "webpack --webpack.dev.js"
"build": "webpack --webpack.prod.js"

Loading CSS:
___________________________________________________

npm install --save-dev style-loader css-loader

Add the following to the webpack.common.js:

module: {
    rules: [
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader'],
      },
    ],
  },

Loading Images:
___________________________________________________

add to module rules section:

{
    test: /\.(png|svg|jpg|jpeg|gif)$/i,
    type: 'asset/resource',
},

Loading Fonts:
___________________________________________________
add to module rules section:

{
    test: /\.(woff|woff2|eot|ttf|otf)$/i,
    type: 'asset/resource',
},

add to css in src file
@font-face {
  font-family: 'MyFont';
  src: url('./my-font.woff2') format('woff2'),
    url('./my-font.woff') format('woff');
  font-weight: 600;
  font-style: normal;
}